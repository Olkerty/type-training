{"version":3,"sources":["components/TypeTrainer/TypeTrainer.module.css","components/Button/Button.module.css","components/TypeTrainer/TypeTrainer.jsx","components/Button/Button.jsx","App.js","hooks/useFetching.js","reportWebVitals.js","index.js"],"names":["module","exports","timerId","currentChar","Button","onClick","children","id","className","styles","wronc","righc","time","TypeTrainer","React","memo","arrayOfTexts","useState","wrongCounter","setWrongCounter","rightCounter","setRightCounter","timer","setTimer","text","setText","startButton","document","getElementById","useEffect","getRandomItem","replace","textContainer","querySelector","compareChars","event","key","classList","remove","rightChar","wrongChar","nextElementSibling","alert","clearInterval","window","removeEventListener","add","split","map","char","console","log","ControlCotainer","src","smallPicture","toFixed","firstChild","disabled","setInterval","addEventListener","getText","a","axios","get","response","arr","Math","floor","random","length","App","setArrayOfTexts","callback","error","setError","fetching","message","useFetching","data","fetchText","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.f334f676.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TypeTrainer\":\"TypeTrainer_TypeTrainer__2N6b1\",\"ControlCotainer\":\"TypeTrainer_ControlCotainer__AzoCB\",\"smallPicture\":\"TypeTrainer_smallPicture__1wwNg\",\"char\":\"TypeTrainer_char__1Sb7w\",\"rightChar\":\"TypeTrainer_rightChar__tIZ8o\",\"wrongChar\":\"TypeTrainer_wrongChar__28bmG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3qrM5\"};","import React, { useEffect, useState } from \"react\";\r\nimport { getRandomItem } from \"../../App\";\r\nimport { Button } from \"../Button/Button\";\r\nimport styles from './TypeTrainer.module.css';\r\n\r\nlet wronc = 0;\r\nlet righc = 0;\r\nlet time = 0;\r\nlet timerId;\r\nlet currentChar;\r\n\r\n\r\nexport const TypeTrainer = React.memo(({ arrayOfTexts }) => {\r\n\tconst [wrongCounter, setWrongCounter] = useState(0);\r\n\tconst [rightCounter, setRightCounter] = useState(0);\r\n\tconst [timer, setTimer] = useState(0);\r\n\tconst [text, setText] = useState('');\r\n\tconst startButton = document.getElementById('start-button');\r\n\tconst finishButton = document.getElementById('finish-button');\r\n\tuseEffect(() => {\r\n\t\tif (arrayOfTexts) {\r\n\t\t\tsetText(getRandomItem(arrayOfTexts).replace('. ', '.'));\r\n\t\t}\r\n\t}, [arrayOfTexts])\r\n\tconst textContainer = document.querySelector('.text-container');\r\n\tfunction compareChars(event) {\r\n\t\tif (event.key !== 'Shift' && event.key !== 'CapsLock') {\r\n\t\t\tif (event.key == text[righc]) {\r\n\t\t\t\tsetRightCounter(righc + 1);\r\n\t\t\t\tcurrentChar.classList.remove(styles.rightChar);\r\n\t\t\t\tcurrentChar.classList.remove(styles.wrongChar);\r\n\t\t\t\tif (currentChar.nextElementSibling == null) {\r\n\t\t\t\t\talert('YOU DONE WELL!');\r\n\t\t\t\t\tclearInterval(timerId);\r\n\t\t\t\t\tcurrentChar.classList.remove(styles.rightChar);\r\n\t\t\t\t\tcurrentChar.classList.remove(styles.wrongChar);\r\n\t\t\t\t\twindow.removeEventListener('keydown', compareChars)\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tcurrentChar = currentChar.nextElementSibling;\r\n\t\t\t\tcurrentChar.classList.add(styles.rightChar);\r\n\t\t\t\trighc++;\r\n\t\t\t} else {\r\n\t\t\t\tsetWrongCounter(wronc + 1);\r\n\t\t\t\tcurrentChar.classList.add(styles.wrongChar);\r\n\t\t\t\twronc++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction startGame(event) {\r\n\t\tcurrentChar = textContainer.firstChild;\r\n\t\tcurrentChar.classList.add(styles.rightChar);\r\n\t\tstartButton.disabled = true;\r\n\t\ttimerId = setInterval(() => { setTimer(time + 1); time++; }, 1000);\r\n\t\twindow.addEventListener('keydown', compareChars)\r\n\t}\r\n\r\n\tfunction restartGame() {\r\n\t\tsetRightCounter(0);\r\n\t\tsetWrongCounter(0);\r\n\t\twronc = 0;\r\n\t\trighc = 0;\r\n\t\ttime = 0;\r\n\t\tclearInterval(timerId);\r\n\t\tcurrentChar.classList.remove(styles.rightChar);\r\n\t\tcurrentChar.classList.remove(styles.wrongChar);\r\n\t\tstartButton.disabled = false;\r\n\t\tsetText(getRandomItem(arrayOfTexts).replace('. ', '.'));\r\n\t\twindow.removeEventListener('keydown', compareChars)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={styles.TypeTrainer}>\r\n\t\t\t<div className='text-container'>\r\n\t\t\t\t{text.split('').map(function (char) {\r\n\t\t\t\t\tconsole.log(char);\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<span className={styles.char}>\r\n\t\t\t\t\t\t\t{char}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.ControlCotainer}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<img src=\"https://img.icons8.com/ios-filled/50/000000/center-direction.png\" className={styles.smallPicture} /> Accuracy: {rightCounter / (rightCounter + wrongCounter) ?\r\n\t\t\t\t\t\t(100 * rightCounter / (rightCounter + wrongCounter)).toFixed(2) :\r\n\t\t\t\t\t\t100}%\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<img src=\"https://img.icons8.com/ios/50/000000/clock--v3.png\" className={styles.smallPicture} />\tSpeed {(60 * (rightCounter) / timer) ?\r\n\t\t\t\t\t\t(60 * (rightCounter) / timer).toFixed(2)\r\n\t\t\t\t\t\t: 0} signs per minute\r\n\t\t\t\t</div>\r\n\t\t\t\t<Button onClick={startGame} id='start-button'>\r\n\t\t\t\t\tStart button\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button onClick={restartGame} id='finish-button'>\r\n\t\t\t\t\tReset button\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n)","import React from \"react\";\r\nimport styles from './Button.module.css';\r\n\r\nexport const Button = ({ onClick, children, id }) => {\r\n\treturn (\r\n\t\t<button onClick={onClick} className={styles.Button} id={id}>\r\n\t\t\t{children}\r\n\t\t</button>\r\n\t);\r\n}","import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { useFetching } from './hooks/useFetching';\nimport { TypeTrainer } from './components/TypeTrainer/TypeTrainer';\n\nasync function getText() {\n  const response = await axios.get('https://baconipsum.com/api/?type=meat-and-filler');\n  return response;\n}\nexport function getRandomItem(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\n\nlet wronc = 0;\nlet righc = 0;\n\nfunction App() {\n  /*\n  const [wrongCounter, setWrongCounter] = useState(0);\n  const [rightCounter, setRightCounter] = useState(0);\n  const [timer, setTimer] = useState(0);\n  let time = 0;\n  let timerId;\n  let currentChar;\n  let arrayOfTexts;\n  const textContainer = document.querySelector('.text-container');\n  const [text, setText] = useState('');\n  */\n  const [arrayOfTexts, setArrayOfTexts] = useState('')\n  const [text, setText] = useState('');\n\n  const [fetchText, postError] = useFetching(async () => {\n    const response = await getText();\n    setArrayOfTexts(response.data);\n    //text = getRandomItem(arrayOfTexts).replace('. ', '.');\n    //console.log(text);\n    setText(getRandomItem(arrayOfTexts).replace('. ', '.'));\n  })\n  useEffect(() => {\n    fetchText();\n    //setText(\"in.  ut eu esse, duis landjaeger magna\".replace('. ', '.'));\n\n  }, []);\n  /*\n    function compareChars(event) {\n      //console.log(text[righc]);\n      // console.log(event.key);\n      //console.log(event.key == text[righc]);\n      //console.log(event.key);\n      if (true) {\n        //event.key !== 'Shift' && event.key !== 'CapsLock'\n        console.log(`event.key=${event.key}`);\n        console.log(`text[righc]=${text[righc]}`);\n        if (event.key == text[righc]) {\n          setRightCounter(righc + 1);\n          console.log(1234);\n          currentChar.classList.remove('rightChar');\n          currentChar.classList.remove('wrongChar');\n          currentChar = currentChar.nextElementSibling;\n          currentChar.classList.add('rightChar');\n          righc++;\n        } else {\n          setWrongCounter(wronc + 1);\n          currentChar.classList.add('wrongChar');\n          wronc++;\n        }\n      }\n      //console.log(righc);\n      // console.log(wrongCounter);\n      // console.log(event);\n    }\n  \n    function startGame(event) {\n      currentChar = textContainer.firstChild;\n      currentChar.classList.add('rightChar');\n      console.log(event.target);\n      event.target.disabled = true;\n      timerId = setInterval(() => { setTimer(time + 1); time++; }, 1000);\n      window.addEventListener('keydown', compareChars)\n    }\n  \n    function finishGame() {\n      setRightCounter(0);\n      setWrongCounter(0);\n      clearInterval(timerId);\n      console.log(arrayOfTexts);\n      //setText(getRandomItem(arrayOfTexts).replace('. ', '.'));\n      window.removeEventListener('keydown', compareChars)\n    }\n  */\n  /*\n  text, rightCounter, wrongCounter,timer, startgame, finishGame\n  \n  */\n\n  return (\n    <div className='App'>\n      <TypeTrainer arrayOfTexts={arrayOfTexts} />\n\n    </div>\n  );\n}\n\nexport default App;\n\n\n/*\n <div className='text-container'>\n        {text.split('').map(function (char) {\n          // console.log(char == ' ');\n          return (\n            <span className='char'>\n              {char}\n            </span>\n          );\n        }\n        )}\n      </div>\n\n      <div>\n        Accuracy: {rightCounter / (rightCounter + wrongCounter) ?\n          (100 * rightCounter / (rightCounter + wrongCounter)).toFixed(2) :\n          100}%\n      </div>\n      <div>\n        Speed {(60 * (rightCounter) / timer) ? (60 * (rightCounter) / timer).toFixed(2) : 0} signs per minute\n      </div>\n      <button onClick={startGame}>\n        Start button\n      </button>\n      <button onClick={finishGame}>\n        Reset button\n      </button>\n\n*/","import { useState } from \"react\";\r\nexport const useFetching = (callback) => {\r\n\tconst [error, setError] = useState('')\r\n\r\n\tconst fetching = async () => {\r\n\t\ttry {\r\n\t\t\tawait callback()\r\n\t\t} catch (e) {\r\n\t\t\tsetError(e.message);\r\n\t\t} finally {\r\n\t\t}\r\n\t}\r\n\treturn [fetching, error]\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <div className='body'>\n    <App />\n  </div>\n  , document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}